# from cvxopt.modeling import *

# x = variable()
# y = variable()

# c1 = (2*x + y <= 3)
# c2 = (x + 2*y <= 3)
# c3 = (x >= 0)
# c4 = (y >= 0)

# lp1 = op(-4*x - 5*y, [c1, c2, c3, c4])
# lp1.solve()
# print(lp1.status)

# m1 = variable()
# m2 = variable()
# m3 = variable()
# m4 = variable()
# m5 = variable()
# m6 = variable()
# m7 = variable()
# m8 = variable()
# m9 = variable()
# m10 = variable()

# q1 = variable()
# q2 = variable()
# q3 = variable()

# T = variable()

# c1 = (m1 + m2 + + m3 + m4 - q1 == 0 )
# c2 = (m5 + m6 + m7 - q2 == 0)
# c3 = (m8 + m9 + m10 - q3 == 0)

# c4 = (q1 >= 100)
# c5 = (q2 >= 50)
# c6 = (q3 >= 30)

# c7 = (m1 + m2 + m5 + m6 + m10 <= 10*T)
# c8 = (m1 + m4 + m6 + m9 <= 20*T)
# c9 = (m2 + m3 + m6 + m9 <= 50*T)
# c10 = (m3 + m4 + m7 + m10 <= 15*T)
# c11 = (m3 + m4 + m7 + m10 <= 5*T)
# c12 = (m2 + m4 + m5 + m8 <= 7*T)
# c13 = (m2 + m4 + m6 + m7 + m8 <= 4*T)

# lp1 = op(T, [c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13])
# lp1.solve()
# print(lp1.status)
# print(lp1.objective.value())
# print(m1.value, m2.value, m3.value)

from cvxopt import matrix, solvers

# c = matrix([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])

# G = matrix([[-1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0.], 
# 			[0., -1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1.],
# 			[0., 0., -1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0.],
# 			[0., 0., 0., -1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1.],
# 			[0., 0., 0., 0., -1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0.],
# 			[0., 0., 0., 0., 0., -1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1.],
# 			[0., 0., 0., 0., 0., 0., -1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1.],
# 			[0., 0., 0., 0., 0., 0., 0., -1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1.],
# 			[0., 0., 0., 0., 0., 0., 0., 0., -1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0.],
# 			[0., 0., 0., 0., 0., 0., 0., 0., 0., -1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0.],
# 			[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., -1., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
# 			[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., -1., 0., 0., 0., 0., 0., 0., 0., 0.],
# 			[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., -1., 0., 0., 0., 0., 0., 0., 0.],
# 			[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., -10., -20., -50., -15., -5., -7., -4.]])

# h = matrix([-1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -100., -50., -30., 0., 0., 0., 0., 0., 0., 0.])

# A = matrix([[1., 0., 0.], [1., 0., 0.], [1., 0., 0.], [1., 0., 0.], [0., 1., 0.], [0., 1., 0.], [0., 1., 0.], [0., 0., 1.], [0., 0., 1.], [0., 0., 1.],
# 			[-1., 0., 0.], [0., -1., 0.], [0., 0., -1.], [0., 0., 0.]])

# b = matrix([0., 0., 0.])

# sol = solvers.lp(c, G, h, A, b)

# print(sol['x'])	
# print(sol['primal objective'])


c = matrix([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])

G = matrix([[-1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0.], 
			[0., -1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 1.],
			[0., 0., -1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0.],
			[0., 0., 0., -1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1.],
			[0., 0., 0., 0., -1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0.],
			[0., 0., 0., 0., 0., -1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1.],
			[0., 0., 0., 0., 0., 0., -1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1.],
			[0., 0., 0., 0., 0., 0., 0., -1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0.],
			[0., 0., 0., 0., 0., 0., 0., 0., -1., 0., 0., 0., 0., 1., 1., 0., 1., 1., 0., 0.],
			[0., 0., 0., 0., 0., 0., 0., 0., 0., -1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1.],
			[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., -1., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
			[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., -1., 0., 0., 0., 0., 0., 0., 0., 0.],
			[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., -1., 0., 0., 0., 0., 0., 0., 0.],
			[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., -10., -20., -50., -15., -5., -7., -4.]])

h = matrix([-1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -100., -50., -30., 0., 0., 0., 0., 0., 0., 0.])

A = matrix([[1., 0., 0.], [1., 0., 0.], [1., 0., 0.], [1., 0., 0.], [0., 1., 0.], [0., 1., 0.], [0., 1., 0.], [0., 0., 1.], [0., 0., 1.], [0., 0., 1.],
			[-1., 0., 0.], [0., -1., 0.], [0., 0., -1.], [0., 0., 0.]])

b = matrix([0., 0., 0.])

sol = solvers.lp(c, G, h, A, b)

print(sol['x'])	
print(sol['primal objective'])